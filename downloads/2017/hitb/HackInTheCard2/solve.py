from Crypto.PublicKey import RSA
from fractions import gcd
from Crypto.Util import number

pem = open("publickey.pem").read()
rsa = RSA.importKey(pem)

n = rsa.n
e = rsa.e

#print n
print e

d = 1
c = int("016d1d26a470fad51d52e5f3e90075ab77df69d2fb39905fe634ded81d10a5fd10c35e1277035a9efabb66e4d52fd2d1eaa845a93a4e0f1c4a4b70a0509342053728e89e977cfb9920d5150393fe9dcbf86bc63914166546d5ae04d83631594703db59a628de3b945f566bdc5f0ca7bdfa819a0a3d7248286154a6cc5199b99708423d0749d4e67801dff2378561dd3b0f10c8269dbef2630819236e9b0b3d3d8910f7f7afbbed29788e965a732efc05aef3194cd1f1cff97381107f2950c935980e8954f91ed2a653c91015abea2447ee2a3488a49cc9181a3b1d44f198ff9f0141badcae6a9ae45c6c75816836fb5f331c7f2eb784129a142f88b4dc22a0a977", 16)
m = pow(c, d, n)
#print hex(m)[2:-1].decode("hex")

d1 = 0x81d722d38ea2591ff23fc19b8d4f91f1dbf5a3f88fff294850a1421f2164f4bb1c8587de415d38cd8b35a012e6d92c88f5f29bfffd74375d6494fcd266af055bdae755a93d22b6919cefa9a93b50d58a1fc0caa9c8f70418cb3efb4fc93676caea8d8405337487f1b847c0bd90273062844e1223aca54e60814af504fda565d2ebc4b9023a187d4765ca9bc526d2f97ca844bf43101e6b1324285d8b07760334b3401dd93fc634c038a68e13ab5b2dc76dcfd3d87063922e48053225e0988ed86e63b204da9df12cff556e840038f44f8fdbc707423a0952944b730def9c7468fc2d38e0ee0dd9f9af7fa3e06fd3c5590df7899acce035bf6d2619efbc7ff3b3
e1 = 43457214399853106709365518016104583245597682563258997442852833557875824462848972074458890178842612202837273300092599906320145501787876067274540439747471714632459629837789201065247110607915518396101921915152021497825731566161955942985363115369201280506947037645379672658506866933540812391567835004807653166726519027887641890536890078107300074210640682400667202092348666903506251859460633558343547831022251337805499704499516967419532137037318140567400958376222119904648572117307678724771761426815722612585741949304251832071591103792001813116224387497530356953058973407238164403155834703898398361662735994028269881647963
print e1


#https://tradahacking.vn/hitb-gsec-singapore-2017-ctf-write-ups-crypto-category-803d6c770103
#https://www.di-mgt.com.au/rsa_factorize_n.html

p = 0
q = 0

for g in range(3,1000):
    k = d1 * e1 - 1
    t = k
    x = 1
    while pow(t, 1, 2) != 1 :
        t = t / 2
        x = pow(g,t,n)
        if x == 1:
            continue
        if gcd(x-1, n) != 1:
            p = gcd(x-1, n)
            q = n / p
    if p != 0:
        break
        
d = number.inverse(e, (p - 1) * (q - 1))
m = pow(c,d,n)
print hex(m)[2:-1].decode("hex")        
